# SPDX-FileCopyrightText: 2023 Joonas Rautiola <joinemm@pm.me>
# SPDX-License-Identifier: MPL-2.0
# https://git.joinemm.dev/miso-bot

version: '3.7'

services:
  nginx:
    image: nginx:latest
    container_name: miso-nginx
    restart: unless-stopped
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443
    profiles: [prod]

  db:
    container_name: miso-db
    image: mariadb
    restart: unless-stopped
    volumes:
      - database:/var/lib/mysql
      - ./sql/init:/docker-entrypoint-initdb.d:ro
      - ./sql/scheduled:/scripts:ro
    ports:
      - 3306:3306
    environment:
      - MARIADB_USER=bot
      - MARIADB_PASSWORD=botpw
      - MARIADB_DATABASE=misobot
      - MARIADB_ROOT_PASSWORD=secure-af
    profiles: [prod, dev, dev-extra]

  shlink-db:
    container_name: miso-shlink-db
    image: mariadb
    restart: unless-stopped
    volumes:
      - shlink-database:/var/lib/mysql
    environment:
      - MARIADB_USER=bot
      - MARIADB_PASSWORD=botpw
      - MARIADB_DATABASE=shlink
      - MARIADB_ROOT_PASSWORD=secure-af
    profiles: [prod, dev-extra]

  prometheus:
    container_name: miso-prometheus
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    profiles: [prod]

  grafana:
    container_name: miso-grafana
    image: grafana/grafana-oss
    restart: unless-stopped
    ports:
      - "9080:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    profiles: [prod]

  image-server:
    container_name: miso-image-server
    build: https://github.com/joinemm/sushii-image-server.git#main
    restart: unless-stopped
    init: true
    cap_add:
      - SYS_ADMIN
    expose:
      - 3000
    volumes:
      - ./static:/app/static:ro
      - ./templates:/app/templates:ro
    profiles: [prod, dev-extra]

  shlink:
    container_name: miso-shlink
    image: shlinkio/shlink:latest
    restart: unless-stopped
    expose:
      - 8080
    environment:
      - DEFAULT_DOMAIN=url.misobot.xyz
      - IS_HTTPS_ENABLED=true
      - DB_DRIVER=maria
      - DB_NAME=shlink
      - DB_USER=bot
      - DB_PASSWORD=botpw
      - DB_HOST=shlink-db
    depends_on:
      - shlink-db
    profiles: [prod, dev-extra]

  emojifier:
    container_name: miso-emojifier
    build: https://github.com/joinemm/emojify.git#backend
    restart: unless-stopped
    expose:
      - 3000
    profiles: [prod, dev-extra]

  bot-prod:
    container_name: miso-bot
    build: .
    command: python -O main.py
    restart: unless-stopped
    expose:
      - 8080
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DB_HOST=miso-db
      - IMAGE_SERVER_HOST=image-server
      - EMOJIFIER_HOST=emojifier
      - WEBSERVER_PORT=8080
      - WEBSERVER_HOSTNAME=0.0.0.0
      - USE_REDIS_CACHE=1
    tty: true
    profiles: [prod]

  bot-dev:
    container_name: miso-bot-dev
    build: .
    command: python -O main.py dev
    restart: unless-stopped
    expose:
      - 8080
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DB_HOST=miso-db
      - IMAGE_SERVER_HOST=image-server
      - EMOJIFIER_HOST=emojifier
      - WEBSERVER_PORT=8080
      - WEBSERVER_HOSTNAME=0.0.0.0
      - USE_REDIS_CACHE=1
    tty: true
    profiles: [dev, dev-extra]

  redis:
    container_name: miso-redis
    image: "redis:alpine"
    environment:
      - REDIS_REPLICATION_MODE=master
    expose:
      - 6379
    volumes:
      - redis-data:/data
    profiles: [prod, dev-extra]

networks:
  default:
    driver: bridge

volumes:
  database:
  shlink-database:
  grafana-storage:
  prometheus-storage:
  redis-data:
